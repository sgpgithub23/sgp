import Head from "next/head";
import React, { FormEvent, useEffect } from "react";
import Navbar from "@/components/Navbar";
import styles from "@/styles/Documentacoes.module.scss";
import * as yup from "yup";
import { FooterCompleto } from "@/components/FooterCompleto";
import { AiOutlinePaperClip } from "react-icons/ai";
import Image from "next/image";
import { CertidoesDeclaracoes } from "@/utils/certidoes-declaracoes";
import { useRouter } from "next/router";
import { DocumentacoesReq } from "@/typings/Requisicoes/Documentacoes";
import { extractErrorMessages } from "@/utils/tratamento-erros";
import { InferGetStaticPropsType } from "next";
import FriendlyErrorMessage from "@/components/FriendlyErrorMessage";
import Link from "next/link";

export async function getStaticProps() {
  let errorsDocumentacoes: any[] = [];
  let docs: DocumentacoesReq[] = [];
  let declaracoescertidoes: DocumentacoesReq[] = [];

  const res = await fetch(
    `${process.env.NEXT_PUBLIC_GET_INFOS_SGP_CONTATO}?action=1&model=documentacoessgp`
  );
  let documentacoes: DocumentacoesReq[] = await res.json();

  errorsDocumentacoes = extractErrorMessages(documentacoes);

  if (errorsDocumentacoes.length > 0) {
    documentacoes = [];
  } else {
    let auxDocs = documentacoes.filter(
      (doc) => doc.descricaocategoria_docu === "Demais documentações"
    );

    let auxDeclaracoesCertidoes = documentacoes.filter(
      (doc) => doc.descricaocategoria_docu === "Certidões e Declarações"
    );

    docs.push(...auxDocs);
    declaracoescertidoes.push(...auxDeclaracoesCertidoes);
  }

  return {
    props: {
      docs,
      declaracoescertidoes,
      errorsDocumentacoes,
    },
    revalidate: 600,
  };
}

export default function Documentacoes({
  docs,
  declaracoescertidoes,
  errorsDocumentacoes,
}: InferGetStaticPropsType<typeof getStaticProps>) {
  const { push } = useRouter();

  return (
    <div className={styles.main}>
      <Head>
        <title>SGP - Soluções em Gestão Público</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="shortcut icon" href="/favicon/favicon.ico" />
      </Head>
      <Navbar />
      <div className={styles.content}></div>
      <div className={styles.pageSize}>
        <div className={styles.mainContentForm}>
          <div className={styles.introduction}>
            <h2>Documentações SGP</h2>
            <span>
              Caro cliente, aqui se encontra a lista de documentações para que
              possa <b>realizar download.</b>{" "}
            </span>
            <span>
              Caso não encontre a documentação necessária, acesse este link{" "}
              <b
                style={{ cursor: "pointer" }}
                onClick={() => {
                  push({
                    pathname: "/contato",
                    query: {
                      assuntoForm: "Minha Documentação",
                    },
                  });
                }}
              >
                "Minha Documentação"
              </b>{" "}
              e solicite à SGP Soluções.
            </span>

            <ul>
              <li>Informações cadastrais</li>
              <li>
                SGP Soluções em Gestão Pública | CNPJ: 29.759.932/0001-02 | Rua
                Sete de Abril, 252 | 12° Andar | Cj: 120/121 - CEP: 01044-903 -
                República - São Paulo - SP
              </li>
            </ul>
            <div className={styles.imgDiv}>
              <Image
                src={"/images/contato/mulher-sorrindo.webp"}
                alt="Bolo de chocolate"
                width={416}
                className={"imgOnHover"}
                height={435}
              />
            </div>
          </div>
          <div className={styles.documentacoes}>
            <h2 className={styles.certidao}>Demais documentações</h2>
            {errorsDocumentacoes.length <= 0 ? (
              docs.map(
                ({ titulolink_docu, caminholinkhref, nomearquivo_docu }, i) => (
                  <Link
                    href={`${caminholinkhref}${nomearquivo_docu}`}
                    className={styles.documentacaoBaixar}
                    key={i}
                  >
                    <AiOutlinePaperClip style={{ fontSize: "20px" }} />{" "}
                    <span>{titulolink_docu}</span>
                  </Link>
                )
              )
            ) : (
              <FriendlyErrorMessage commommsg />
            )}

            <h2 className={styles.certidao} style={{ marginTop: "30px" }}>
              Certidões e Declarações
            </h2>
            <div className={styles.certidoesDeclaracoesMap}>
              {errorsDocumentacoes.length <= 0 ? (
                declaracoescertidoes.map(
                  (
                    { titulolink_docu, caminholinkhref, nomearquivo_docu },
                    i
                  ) => (
                    <Link
                      href={`${caminholinkhref}${nomearquivo_docu}`}
                      className={styles.documentacaoBaixar}
                      key={i}
                    >
                      <AiOutlinePaperClip style={{ fontSize: "20px" }} />{" "}
                      <span>{titulolink_docu}</span>
                    </Link>
                  )
                )
              ) : (
                <FriendlyErrorMessage commommsg />
              )}
            </div>
          </div>
        </div>
      </div>
      <FooterCompleto />
    </div>
  );
}
