import Head from "next/head";
import React, { FormEvent, useEffect, useState } from "react";
import Input from "@/components/Input";
import Navbar from "@/components/Navbar";
import styles from "@/styles/Login.module.scss";
import { FiEdit } from "react-icons/fi";
import { FooterCompleto } from "@/components/FooterCompleto";
import Button from "@/components/Button";
import { useRouter } from "next/router";

export default function Login({ isInternal }: any) {
  const [isAreaCliente, setIsAreaCliente] = useState<boolean>(true);
  const [isTelaPreencherCampo, setIsTelaPreencherCampo] =
    useState<boolean>(false);
  const [isFormAlterarSenha, setIsFormAlterarSenha] = useState<boolean>(false);

  function changeScreens() {
    if (isAreaCliente && !isTelaPreencherCampo && !isFormAlterarSenha) {
      return (
        <LoginPrincipal
          setIsTelaPreencherCampo={setIsTelaPreencherCampo}
          setIsAreaCliente={setIsAreaCliente}
          setIsFormAlterarSenha={setIsFormAlterarSenha}
          isInternal={isInternal}
        />
      );
    }

    if (!isAreaCliente && isTelaPreencherCampo && !isFormAlterarSenha) {
      return (
        <PreencherCampoEmail
          setIsTelaPreencherCampo={setIsTelaPreencherCampo}
          setIsAreaCliente={setIsAreaCliente}
          setIsFormAlterarSenha={setIsFormAlterarSenha}
          isInternal={isInternal}
        />
      );
    }

    if (!isAreaCliente && !isTelaPreencherCampo && isFormAlterarSenha) {
      return (
        <RecuperacaoSenha
          setIsTelaPreencherCampo={setIsTelaPreencherCampo}
          setIsAreaCliente={setIsAreaCliente}
          setIsFormAlterarSenha={setIsFormAlterarSenha}
          isInternal={isInternal}
        />
      );
    }
  }

  return (
    <div className={styles.main}>
      <Head>
        <title>SGP - Soluções em Gestão Público</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="shortcut icon" href="/favicon/favicon.ico" />
      </Head>
      <Navbar />

      {changeScreens()}

      <FooterCompleto />
    </div>
  );
}

function LoginPrincipal(props: any) {
  return (
    <div className={styles.main}>
      <Head>
        <title>SGP - Soluções em Gestão Público</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="shortcut icon" href="/favicon/favicon.ico" />
      </Head>
      <Navbar />
      <div className={styles.pageSize}>
        <div className={styles.formulario}>
          <h1>Área do cliente (login)</h1>
          <p>
            Para logar você deve ter recebido via e-mail da SGP Soluções o seu
            usuário e senha, ativado e validado. Seu usuário e senha é de sua
            propriedade, portanto, pessoal e intrasferível. Altere sua senha no
            primeiro acesso, caso seu usuário seja do tipo "monousuário"!
          </p>

          {props.isInternal ? (
            <form>
              <div>
                <Input
                  type="email"
                  label="Usuário"
                  placeholder="Nome de Usuário"
                />
              </div>
              <div>
                <Input
                  type="password"
                  label="Senha"
                  placeholder="Insira sua senha"
                />
              </div>
              <a
                role="button"
                onClick={() => {
                  props.setIsTelaPreencherCampo(true);
                  props.setIsAreaCliente(false);
                  props.setIsFormAlterarSenha(false);
                }}
              >
                Esqueci minha Senha
              </a>
              <div className={styles.botoes}>
                <Button color="blue" title="Entrar" />
              </div>
            </form>
          ) : (
            <h2>Não é permitido acessar diretamente pela url.</h2>
          )}
        </div>
        <div className={styles.imagemRight}></div>
      </div>
    </div>
  );
}

function PreencherCampoEmail(props: any) {
  return (
    <div className={styles.main}>
      <Head>
        <title>SGP - Soluções em Gestão Público</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="shortcut icon" href="/favicon/favicon.ico" />
      </Head>
      <Navbar />
      <div className={styles.formularioPreencherCampo}>
        <h1>Preencha o campo</h1>
        <p>
          Após confirmação chegará na caixa de e-mail do proprietário do login o
          seguinte e-mail: SGP Soluções / Alteração de Senha e Texto Secreto
        </p>

        <form>
          <div>
            <Input type="email" placeholder="Digite seu e-mail" />
          </div>
          <div className={styles.botoes}>
            <Button
              color="grey"
              title="Voltar"
              onClick={() => {
                props.setIsTelaPreencherCampo(false);
                props.setIsAreaCliente(true);
                props.setIsFormAlterarSenha(false);
              }}
            />
            <Button
              color="blue"
              title="Próximo"
              onClick={() => {
                props.setIsTelaPreencherCampo(false);
                props.setIsAreaCliente(false);
                props.setIsFormAlterarSenha(true);
              }}
            />
          </div>
        </form>
      </div>
    </div>
  );
}

function RecuperacaoSenha(props: any) {
  return (
    <div className={styles.main}>
      <Head>
        <title>SGP - Soluções em Gestão Público</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="shortcut icon" href="/favicon/favicon.ico" />
      </Head>
      <Navbar />
      <div className={styles.pageSizeRecuperaSenha}>
        <div className={styles.formularioRecuperaSenha}>
          <h1>Alterar a senha</h1>
          <p>
            Após confirmação chegará na caixa de e-mail do proprietário do login
            o seguinte e-mail: SGP Soluções / Alteração de Senha e Texto Secreto
          </p>
          <h3>
            <FiEdit />
            Insira nova senha
          </h3>

          <form>
            <div>
              <Input type="email" label="E-mail" placeholder="E-mail" />
            </div>
            <div>
              <Input
                type="password"
                label="Nova senha"
                placeholder="Insira uma nova senha"
              />
            </div>
            <div>
              <Input
                type="password"
                label="Confirmação de Senha"
                placeholder="Repita a senha..."
              />
            </div>
            <div className={styles.botoes}>
              <Button
                color="grey"
                title="Voltar"
                onClick={() => {
                  props.setIsTelaPreencherCampo(true);
                  props.setIsAreaCliente(false);
                  props.setIsFormAlterarSenha(false);
                }}
              />
              <Button
                color="blue"
                title="Enviar"
                onClick={() => {
                  props.setIsTelaPreencherCampo(false);
                  props.setIsAreaCliente(true);
                  props.setIsFormAlterarSenha(false);
                }}
              />
            </div>
          </form>
        </div>
      </div>
    </div>
  );
}

export async function getServerSideProps({ req }: any) {
  const referer = req.headers.referer || "";
  const isInternal = referer.startsWith(
    process.env.NEXT_PUBLIC_ENVIRONMENT_URL
  );

  return {
    props: {
      isInternal,
    },
  };
}
